@using MewPipe.Accounts.ViewModels
@model MewPipe.Accounts.ViewModels.OpenIdViewModel

@using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
{
    @Html.AntiForgeryToken()

    <p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.LabelFor(m => m.OpenIdLoginUrl, new { @class = "" })
        <div class="input-group">
            <div class="input-group-addon"><i class="fa fa-openid"></i></div>
            @Html.TextBoxFor(m => m.OpenIdLoginUrl, new {@class = "form-control"})
        </div>
        @Html.ValidationMessageFor(m => m.OpenIdLoginUrl, "", new { @class = "text-danger" })
    </p>
    <p>
        <button type="submit" class="btn-block btn-social btn-openid" id="OpenID" name="provider" value="OpenID" title="Sign in using your OpenID account">
            <i class="fa fa-openid"></i> Sign in with OpenID
        </button>
    </p>
}