@using System.ServiceModel.Configuration
@using EntityFramework.Extensions
@using MewPipe.Logic.Contracts
@model MewPipe.Website.ViewModels.SearchViewModel
@using MewPipe.Logic.Models
@{
    ViewBag.Title = "Search Videos";
    ViewBag.BodyClass = "searchPage";

    var results = ViewBag.Results as SearchContract;
    var noSearch = ViewBag.NoSearch is bool && (bool) ViewBag.NoSearch;

    var currentLowerResult = Model.Page * 20 + 1;
    var currentHigherResult = (Model.Page + 1) * 20;
    var totalResults = (int) results.ResultsCount;
    if (currentHigherResult > totalResults)
    {
        currentHigherResult = totalResults;
    }
}

@section styles
{
    @Styles.Render("~/styles/search")
}

<div class="searchPanel">
    @using (Html.BeginForm("Search", "Videos", FormMethod.Get, new { @class = "", @role = "search" }))
    {
        <div class="input-group">
            @Html.TextBoxFor(m => m.Term, new {@class = "form-control", @placeholder = "Search"})
            <span class="input-group-btn">
                <button class="btn btn-info appendedBtn" type="submit">SEARCH</button>
            </span>
        </div>
        <div class="options">
            <div class="row">
                <div class="col-xs-6 text-center">
                    <span class="title">SEARCH ORDER CRITERIA</span>
                    <label class="criteriaLabel">
                        @Html.RadioButtonFor(m => m.OrderCriteria, "date") Date
                    </label>
                    <label class="criteriaLabel">
                        @Html.RadioButtonFor(m => m.OrderCriteria, "goodImpressionsPercentage") Appreciation
                    </label>
                    <label class="criteriaLabel">
                        @Html.RadioButtonFor(m => m.OrderCriteria, "views") Views
                    </label>
                </div>
                <div class="col-xs-6 text-center" style="display: table-cell;">
                    <label class="orderLabel" for="@Html.DisplayNameFor(m => m.OrderDesc)">SORT ORDER</label>
                    @Html.DropDownListFor(m => m.OrderDesc, new List<SelectListItem>()
                    {
                        new SelectListItem
                        {
                            Text = "Descendant",
                            Value = "True",
                            Selected = true
                        },
                        new SelectListItem
                        {
                            Text = "Ascendant",
                            Value = "False"
                        }
                    })
                </div>
            </div>
            
            
        </div>
    }
</div>

@if (!noSearch && results != null && results.Results.Any())
{
    <ul class="list-group results">
        @foreach (var video in results.Results)
        {
            var name = string.IsNullOrWhiteSpace(video.Name) ? "Unnamed video" : video.Name;
            var description = string.IsNullOrWhiteSpace(video.Description) ? "No description" : video.Description;
            var duration = TimeSpan.FromSeconds(video.Seconds);

            <li class="list-group-item">
                <div class="leftContent">
                    <a href="/v/@video.PublicId">
                        <img src="http://videos-repository.mewpipe.local:44403/api/thumbnailsData/@video.PublicId" />
                        <div class="hover"></div>
                        <div class="duration">
                            @duration.ToString(@"mm\:ss")
                        </div>
                    </a>
                </div>
                <div class="rightContent">
                    <h3>
                        <a href="/v/@video.PublicId">@name</a>
                    </h3>
                    <p>
                        @string.Format("{0:n0}", video.Views) views
                    </p>
                    <p class="description">
                        @description
                    </p>
                </div>
                <div class="clearfix"></div>
            </li>
        }
    </ul>
    <nav>
        <ul class="pager">

            <li>
                Result(s) @currentLowerResult - @currentHigherResult on @totalResults total search results
            </li>
            @if (currentLowerResult > 1)
            {
                <li class="previous">
                    <a href="@Url.Action("Search", new
                         {
                             Term = Model.Term,
                             OrderCriteria = Model.OrderCriteria,
                             OrderDesc = Model.OrderDesc,
                             Page = Model.Page - 1
                         })">
                        <span aria-hidden="true">&larr;</span>
                        Previous results
                    </a>
                </li>
            }
            else
            {
                <li class="previous disabled">
                    <a href="#">
                        <span aria-hidden="true">&larr;</span>
                        Previous results
                    </a>
                </li>
            }

            @if (currentHigherResult < results.ResultsCount)
            {
                <li class="next">
                    <a href="@Url.Action("Search", new
                             {
                                 Term = Model.Term,
                                 OrderCriteria = Model.OrderCriteria,
                                 OrderDesc = Model.OrderDesc,
                                 Page = Model.Page + 1
                             })">
                        Next results
                        <span aria-hidden="true">&rarr;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="next disabled">
                    <a href="#">
                         Next results
                        <span aria-hidden="true">&rarr;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
}

@if (results == null || !results.Results.Any())
{
    <p class="noresults">Your search returned no results !</p>
}