@model MewPipe.Website.ViewModels.EditVideoViewModel
@using MewPipe.Logic.Contracts
@using MewPipe.Logic.Models
@using MewPipe.Website.ViewModels
@{
    var video = ViewBag.VideoDetails as VideoContract;

    var whiteList = ViewBag.WhiteList as UserContract[];

    ViewBag.Title = String.Format("Edit \"{0}\"", video.Name);
}

@section styles {
    @Styles.Render("~/styles/editVideo")
}

<div class="row contentZone">
    @if (video.Status != Video.StatusTypes.Published)
    {
        <div class="darken notReady">
            <p>
                This video is currently being converted by our servers. It is not visible yet but you will receive a mail when you video will be available.
            </p>
        </div>
    }
</div>

<h2 class="float-left">@video.Name - Edition</h2>
@if (video.Status == Video.StatusTypes.Published)
{
    <p class="float-right">
        @Html.ActionLink("View the video", "Index", new { videoId = video.PublicId }, new { @class = "btn btn-primary raised" })
    </p>
}

<div class="clearfix"></div>
<br/>
@using (Html.BeginForm("EditVideo", "Videos", FormMethod.Post))
{
    @Html.HiddenFor(m => m.PublicId)
    <div class="row">
        <div class="col-md-6">
            <div class="control">
                @Html.LabelFor(m => m.Name)
                <br />
                @Html.TextBoxFor(m => m.Name, new { @placeholder = "Video Name" })
                <br/>
                @Html.ValidationMessageFor(m => m.Name)
            </div>
        </div>
        <div class="col-md-6">
            <div class="help">
                <strong>The name</strong> of your video is important to help other users find your videos.
                <br />
                It will be used in our Search Engine to give the best suggestions for our users.
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <div class="control">
                @Html.LabelFor(m => m.Description)
                <br/>
                @Html.TextAreaFor(m => m.Description)
                <br/>
                @Html.ValidationMessageFor(m => m.Description)
            </div>
        </div>
        <div class="col-md-6">
            <div class="help">
                <strong>The description</strong> of your video is here to add a textual description to your video.
                <br/>
                You can add some details, links, transaltions, summary or anything that you want here.
                <br/>
                Depending on the relevancy of the description, it may be used in the Search Engine.
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <div class="control">
                @Html.LabelFor(m => m.CategoryId)
                <br />
                @Html.DropDownListFor(m => m.CategoryId, Model.CategoryList)
                <br />
                @Html.ValidationMessageFor(m => m.CategoryId)
            </div>
        </div>
        <div class="col-md-6">
            <div class="help">
                <strong>The category</strong> of your video will help other users to find your video.
                <br />
                It will also improve the way your video is suggested to other users.
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <div class="control">
                @Html.LabelFor(m => m.Tags)
                <br />
                @Html.TextBoxFor(m => m.Tags, new { @placeholder = "Video Tags" })
                <br />
                @Html.ValidationMessageFor(m => m.Tags)
            </div>
        </div>
        <div class="col-md-6">
            <div class="help">
                <strong>The tags</strong> are keywords you can use to describe your video.
                <br />
                They are not the most important point, but if you choose them wisely they will help us to promote your video. (Maximum 10 tags per video)
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-6">
            <div class="control">
                @Html.LabelFor(m => m.PrivacyStatus)
                <br />
                @Html.EnumDropDownListFor(m => m.PrivacyStatus)
                <br />
                @Html.ValidationMessageFor(m => m.PrivacyStatus)
            </div>
        </div>
        <div class="col-md-6">
            <div class="help">
                <strong>Public</strong> will put your video in our Search Engine and it will be available publicly and in the search module.
                <br />
                <strong>Link Only</strong> won't index your video in our Search Engine and it will be available only to the people who has the link.
                <br />
                <strong>Private</strong> will give the access to your video through a White-List (if this option is selected you can modify this white list below).
            </div>
        </div>
    </div>
    <div class="buttonZone">
        <button class="btn btn-danger raised" type="submit">Update my video</button>
    </div>

}

@if (video.PrivacyStatus == Video.PrivacyStatusTypes.LinkOnly)
{
    <hr class="sep" />

    <h2>Video Link</h2>
    <div class="row">
        <div class="col-md-6">
            <div class="control">
                <input type="text" readonly="readonly" value="@Url.Action("Index", "Videos", new { videoId = @video.PublicId }, "http")"/>
            </div>
        </div>
        <div class="col-md-6">
            <div class="help">
                <strong>Your video is currently in link only mode. </strong>
                <br />
                This means that only you and the persons that have this link can see this video.
            </div>
        </div>
    </div>
}

@if (video.PrivacyStatus == Video.PrivacyStatusTypes.Private && whiteList != null)
{

    <hr class="sep" />

    <h2>Video's White List</h2>
    <div class="row">
        <div class="col-md-6">
            <div class="control">
                <ul class="list-group">
                    @foreach (var user in whiteList)
                    {
                        <li class="list-group-item">
                            @user.Email - @Html.ActionLink("Remove", "RemoveUserFromVideoWhitelist", new { videoId = @video.PublicId, userId = @user.Id })
                        </li>
                    }
                </ul>

                @if (whiteList.Length == 0)
                {
                    <p>
                        You didn't allowed anyone to see this video yet.
                    </p>
                }
                @Html.Partial("_AddUserToVideoWhiteListForm", model: new AddUserToVideoWhiteListViewModel
                {
                    PublicId = video.PublicId
                })
            </div>
        </div>
        <div class="col-md-6">
            <div class="help">
                <strong>Your video is currently in private mode. </strong>
                <br />
                This means that only you and the persons in the list on the left can see this video.
            </div>
        </div>
    </div>
}

<hr class="sep" />

<h2>Delete this video</h2>
<div class="row">
    <div class="col-md-6">
        <div class="help">
            <strong>Deleting this video will be definitive.</strong>
            <br />
            You won't be able to get back the files and the video won't be available anymore on MewPipe.
        </div>
    </div>
    <div class="col-md-6">
        <div class="control">
            @Html.Partial("_DeleteVideoForm")
        </div>
    </div>
</div>
<p>

</p>
<div class="buttonZone">
</div>
